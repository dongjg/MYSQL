一、数据备份策略
  -完全备份：备份所有数据
  -增量备份：备份上次备份后，所有新产生的数据
  -差异备份：备份完全备份后，所有新产生的数据
  
二、逻辑备份
  -备份操作：
            #mysqldump -uroot -p密码 库名 > 路径/xxx.sql
            
            库名表示方法：
                        --all-databases 或 -A   表示所有库
                        数据库名                 表示单个库
                        数据库名 表名             表示单张表
                        -B 数据库1 数据库2        表示多个库
            #mysql -uroot -p123qqq...A -A > /dbbak/full.sql       //备份所有
            #mysql -uroot -p123qqq...A db4 > /dbbak/db4.sql       //备份db4库
                        
  -恢复操作：
            #mysql -uroot -p密码 库名 < 路径/xxx.sql
            
            #mysql -uroot -p123qqq...A < /dbbak/userdb
            
三、数据增量备份与恢复
  1、实时增量备份与恢复
    -启用mysql服务的binlog日志文件实现的
      binlog日志(二进制日志)：记录所有更改数据的操作(除查询之外)
      默认路径：/var/lib/mysql
        配置：/etc/my.cnf
            server_id=50    //设备id范围1～255
            log-bin 或者指定存储路径 log_bin=/logdir/lfx
            
            #chown mysql /logdir
     -查看日志当前记录格式
        mysql>show variables like "binlog_format"
        修改日志记录格式：
          #vim /etc/my.cnf
              [mysqld]
              ...
              binlog_format=mixed
          #systemctl restart mysqld
          
        三种记录格式：
          statement：每一条修改数据的SQL命令都会记录在binlog日志中
          row:不记录SQL语句上下文相关信息，仅保存哪条记录被修改
          mixed:是以上两种格式的混合使用
          
     -分析binlog日志
        格式：#mysqlbinlog [选项] binlog日志文件名
                选项：
                    --start-datetime ="yyyy-mm-dd hh:mm:ss"
                    --stop-datetime  ="yyyy-mm-dd hh:mm:ss"\
                    --start-position =数字
                    --stop-position  =数字
            
     -手动生成新的日志文件几种方法：
            默认日志文件大小500M,超过500M就会自动创建新的日志文件 
            1、重启mysql服务
            2、执行SQL操作 mysql>flush logs;
            3、完全备份后，生成日志。 #mysqldump -uroot -p123qqq...A --flush-logs db5>/dbbak/allbak.sql
            4、#mysql -uroot -p密码 -e 'flush logs'
            
     -清除binlog日志
          删除所有指定版本的binlog日志
            mysql>purge master logs to "binlog文件名";
          删除所有binlog日志，重建新日志
            mysql>set master;
