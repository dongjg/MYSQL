foreign key() references 表名(字段) on updae cascade on delete cascade

show engines;

show variables like 'default_storage_engine'      //查看默认存储类型

set default_storage_engine=MyISAM;                //改用MyISAM引擎

show status like 'Table_lock%';                   //查看当前锁状态
                                                  
update 表名 set 字段=值 where 字段=‘值’             //更新表记录
                                                  
select * from 表名 where 字段 in ('值','值'...);   //条件查询

select * from 表名 where 字段 regexp '^.*y$';      //正则表达式

                                    order by 

select * from 表名 group by 字段 asc/desc;             //升序/降序
                                    
select * from 表名 limit 3;                         //列出前三条

select 字段 as '值',count( ) as '值'                //as关键字指定显示别名

skip-grant-tables=1                                 //跳过授权修改密码（/etc/my.cnf）

update mysql.user set authentication_string=password('123qqq...A') where user='root' and host='localhost';  //重设root密码

mysqladmin -uroot -p password '123qqq...A'      //修改密码

set password for root@localhost=password('123qqq...A')    //修改密码

grant all on *.* to root@localhost identified by "123qqq...A";  //修改密码

flush privileges;         //刷新权限

revoke all on *.* from student@localhost      //撤销权限

mysqldump -uroot -p123qqq...A --all-databases > /root/alldb.sql  //备份所有数据库

mysql -uroot -p123qqq...A userdb < /root/alldb.sql              //导入备份文件

log_bin=mysql00       //启用二进制日志

max_binlog_size=数字m     //binlog日志大小，默认500M

binlog-format="mixed"     //binlog日志格式

mysql>flush logs;       //刷新日志

mysql>purge master logs to "biblog文件名";    //删除早于指定版本的日志

mysql>reset master;         //重建新日志

mysql>show variables like "binlog_format"     //查看日志当前记录格式，有statement、row、mixed

mysqlbinlog /var/lib/mysql/mysql-bin.000001     //查看binlog日志

mysqlbinlog --start-datetime="2017-04-12 12:06:55" --stop-datetime="2017-04-12 12:07:23" /var/lib/mysql/mysql-bin.000001 | mysql \
    -uroot -p123qqq...A         //恢复数据  --start-position=数字 --stop-position=数字

--no-timestamp      //不用日期命名备份文件存储的子目录名

innobackupex基本选项
  --redo-only                     //日志合并
  --apply-log                     //准备还原
  --copy-back                     //恢复数据
  --incremental 目录名             //增量备份
  --incremental-basedir=目录名     //增量备份时，指定上一次备份数据存储的目录名
  --incremental-dir=目录名         //准备恢复数据时，指定增量备份数据存储的目录名
  --export                        //导出表信息
  import                          //导入表空间

完全备份与恢复
innobackupex --user root --password 123qqq...A /bak --no-timestamp      //完全备份

innobackupex --user root --password 123qqq...A --apply-log /bak         //准备恢复数据， 恢复数据时要求清空/var/lib/mysql

innobackupex --usre root --password 123qqq...A -copy-back /bak          //恢复数据

chmod -R mysql:mysql /var/lib/mysql

增量备份与恢复
innobackupex --user root --password 123qqq...A /bak --no-timestamp      //完全备份

innobackupex --user root --password 123qqq...A --incremental /new1 --incremental-basedir="/bak" --no-timestamp  //第一次增量备份

innobackupex --user root --password 123qqq...A --incremental /new2 --incremental-basedir="/new1" --no-timestamp  //第二次增量备份

增量备份与恢复(恢复前先清空目录/var/lib/mysql)
innobackupex --user root --password 123qqq...A --apply-log --redo-only /bak     //完整备份恢复

innobackupex --user root --password 123qqq...A --apply-log --redo-only /bak --incremental-dir="/new1"  //合并备份/new1到/bak

innobackupex --user root --password 123qqq...A --apply-log --redo-only /bak --incremental-dir="/new2"  //合并备份new2到/bak

innobackupex --user root --password 123qqq...A --copy-back /bak       //拷贝文件

chown -R mysql:mysql /var/lib/mysql/  再重启服务

恢复单个表
innobackupex --user root --password 123qqq...A databases="db1" --apply-log --export /db1_bak      //导出表信息

alter table db1.a discard tablespace;         //删除表空间

alter table db1.a import tablespace;          //导出表信息








































