一、数据的读写分离是基于MYSQL的主从复制上实现的
      基本原理：Master数据库处理写操作，Slave数据库处理读操作，master将写操作的变更同步到各个slave节点。
      
      MySQL读写分离能提高系统性能的原因在于：
          -物理服务器增加，机器处理能力提升。拿硬件换性能。
          -主从只负责各自的读和写，极大程度缓解X锁（排它锁）和S锁（共享锁）争用。
          -slave可以配置myiasm引擎，提升查询性能以及节约系统开销。
          -master直接写是并发的，slave通过主库发送来的binlog恢复数据是异步。
          -slave可以单独设置一些参数来提升其读的性能。
          -增加冗余，提高可用性。
二、读写分离配置
    1、装包
      #rpm -ivh maxscale-2.1.2-1.rhel.7.x86_64.rpm
    2、部署maxscale服务
      修改配置文件：/etc/maxscale.cnf
        [server1]                 //定义数据库服务器主机名
        type=server
        address=192.168.4.51      //master主机ip地址
        port=3306
        protocol=MySQLBackend
        
        [server1]                 //定义数据库服务器主机名
        type=server
        address=192.168.4.51      //slave主机ip地址
        port=3306
        protocol=MySQLBackend
        
        [MySQL Monitor]           //定义要监视的数据库节点
        type=monitor
        module=mysqlmon   
        servers=server1,server2   //主从数据库的主机名
        user=scalemon
        passwd=123qqq...A
        monitor_interval=10000
        
        [Read_Write Service]      //定义读写分离的数据库节点
        type=service
        module=readwritesplit
        servers=server1,server2
        user=maxscale
        passwd=123qqq...A
        max_slave_connections=100%
        
    3、在主从数据库上创建授权用户
      创建监控用户：
        mysql>grant replication slave,replicaton client on *.* to scalemon@'%' identified by "123qqq...A";
      创建路由用户：
        mysql>grant select on mysql.* to maxscale@'%' identified by "123qqq...A"
      创建数据库访问用户
        mysql>grant select,insert,update on *.* student@'%' identified by "123qqq...A"
      
    4、启动服务
      #maxscale --config=/etc/maxscale.cnf
      
    5、测试配置 
      在maxscale本机连接管理端口
        #maxadmin -uadmin -pmariadb -P端口号
      访问maxscale代理
        #mysql -h服务器地址 -P端口 -u用户名 -p密码
      
      
      
      
      
      
